name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # NO CACHE - package-lock.json doesn't exist at root

      - name: Clean and install dependencies
        run: |
          echo "üßπ Cleaning any existing lock files..."
          rm -f package-lock.json
          echo "üì¶ Installing frontend dependencies..."
          npm install
          echo "‚úÖ Dependencies installed successfully"
        
      - name: Verify installation
        run: |
          echo "üîç Verifying node_modules..."
          if [ ! -d "node_modules" ]; then
            echo "‚ùå Error: node_modules directory not found"
            exit 1
          fi
          echo "‚úÖ node_modules exists"
          ls -la node_modules/ | head -20
          
      - name: Build
        run: |
          echo "üèóÔ∏è Building frontend..."
          npm run build
          echo "‚úÖ Build completed"
        env:
          # Use secrets with fallback to default values for initial deployment
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://creator-tools-api.ckorhonen.workers.dev' }}
          VITE_TWITTER_CLIENT_ID: ${{ secrets.VITE_TWITTER_CLIENT_ID || '' }}
          VITE_LINKEDIN_CLIENT_ID: ${{ secrets.VITE_LINKEDIN_CLIENT_ID || '' }}
          VITE_INSTAGRAM_APP_ID: ${{ secrets.VITE_INSTAGRAM_APP_ID || '' }}

      - name: Verify build output
        run: |
          echo "üìÇ Checking dist directory..."
          if [ ! -d "dist" ]; then
            echo "‚ùå Error: dist directory not found after build"
            exit 1
          fi
          echo "‚úÖ Build output verified:"
          ls -lah dist/
          du -sh dist/
          
      - name: Deploy to Cloudflare Pages
        if: github.event_name != 'pull_request'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: creator-tools-mvp
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-workers:
    runs-on: ubuntu-latest
    name: Deploy Workers API
    defaults:
      run:
        working-directory: workers/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          # NO CACHE - package-lock.json may be corrupted

      - name: Clean and install dependencies
        run: |
          echo "üßπ Cleaning any existing lock files..."
          rm -f package-lock.json
          echo "üì¶ Installing Workers API dependencies..."
          npm install
          echo "‚úÖ Dependencies installed successfully"

      - name: Verify installation
        run: |
          echo "üîç Verifying node_modules..."
          if [ ! -d "node_modules" ]; then
            echo "‚ùå Error: node_modules directory not found"
            exit 1
          fi
          echo "‚úÖ node_modules exists"
          
          echo "üîç Checking for wrangler..."
          if [ ! -f "node_modules/.bin/wrangler" ]; then
            echo "‚ö†Ô∏è Warning: wrangler not found in node_modules"
          else
            echo "‚úÖ wrangler found"
          fi

      - name: Verify wrangler.toml
        run: |
          echo "üìã Checking wrangler.toml configuration..."
          if [ ! -f "wrangler.toml" ]; then
            echo "‚ùå Error: wrangler.toml not found"
            exit 1
          fi
          echo "‚úÖ wrangler.toml found:"
          cat wrangler.toml
          echo ""
          
          echo "üìã Checking TypeScript source..."
          if [ ! -f "src/index.ts" ]; then
            echo "‚ùå Error: src/index.ts not found"
            exit 1
          fi
          echo "‚úÖ src/index.ts exists"

      - name: Deploy to Cloudflare Workers
        if: github.event_name != 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: workers/api
