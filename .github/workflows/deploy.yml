name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          echo "üì¶ Installing frontend dependencies..."
          npm install --prefer-offline --no-audit
          echo "‚úÖ Dependencies installed successfully"
        
      - name: Verify installation
        run: |
          echo "üîç Verifying node_modules..."
          if [ ! -d "node_modules" ]; then
            echo "‚ùå Error: node_modules directory not found"
            exit 1
          fi
          echo "‚úÖ node_modules exists"
          
          echo "üîç Verifying critical dependencies..."
          for pkg in react vite typescript @types/node; do
            if [ ! -d "node_modules/$pkg" ]; then
              echo "‚ùå Error: Required package '$pkg' not found"
              exit 1
            fi
          done
          echo "‚úÖ All critical dependencies verified"
          
      - name: Type check
        run: |
          echo "üîç Running TypeScript type checking..."
          npm run type-check
          echo "‚úÖ Type check passed"
        
      - name: Build
        run: |
          echo "üèóÔ∏è Building frontend..."
          npm run build
          echo "‚úÖ Build completed"
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://creator-tools-api.ckorhonen.workers.dev' }}
          VITE_TWITTER_CLIENT_ID: ${{ secrets.VITE_TWITTER_CLIENT_ID || '' }}
          VITE_LINKEDIN_CLIENT_ID: ${{ secrets.VITE_LINKEDIN_CLIENT_ID || '' }}
          VITE_INSTAGRAM_APP_ID: ${{ secrets.VITE_INSTAGRAM_APP_ID || '' }}

      - name: Verify build output
        run: |
          echo "üìÇ Checking dist directory..."
          if [ ! -d "dist" ]; then
            echo "‚ùå Error: dist directory not found after build"
            exit 1
          fi
          echo "‚úÖ Build output verified:"
          ls -lah dist/
          du -sh dist/
          
          echo "üîç Checking for critical files..."
          if [ ! -f "dist/index.html" ]; then
            echo "‚ùå Error: index.html not found in dist"
            exit 1
          fi
          echo "‚úÖ All critical files present"
          
      - name: Deploy to Cloudflare Pages
        if: github.event_name != 'pull_request'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: creator-tools-mvp
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  deploy-workers:
    runs-on: ubuntu-latest
    name: Deploy Workers API
    defaults:
      run:
        working-directory: workers/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          echo "üì¶ Installing Workers API dependencies..."
          npm install --prefer-offline --no-audit
          echo "‚úÖ Dependencies installed successfully"

      - name: Verify installation
        run: |
          echo "üîç Verifying node_modules..."
          if [ ! -d "node_modules" ]; then
            echo "‚ùå Error: node_modules directory not found"
            exit 1
          fi
          echo "‚úÖ node_modules exists"
          
          echo "üîç Checking for wrangler..."
          if [ ! -f "node_modules/.bin/wrangler" ]; then
            echo "‚ùå Error: wrangler not found in node_modules"
            exit 1
          fi
          echo "‚úÖ wrangler found"
          
          echo "üîç Checking for TypeScript..."
          if [ ! -d "node_modules/typescript" ]; then
            echo "‚ùå Error: typescript not found in node_modules"
            exit 1
          fi
          echo "‚úÖ TypeScript found"
          
          echo "üîç Checking for @cloudflare/workers-types..."
          if [ ! -d "node_modules/@cloudflare/workers-types" ]; then
            echo "‚ùå Error: @cloudflare/workers-types not found in node_modules"
            exit 1
          fi
          echo "‚úÖ @cloudflare/workers-types found"

      - name: Verify configuration files
        run: |
          echo "üìã Checking wrangler.toml configuration..."
          if [ ! -f "wrangler.toml" ]; then
            echo "‚ùå Error: wrangler.toml not found"
            exit 1
          fi
          echo "‚úÖ wrangler.toml found:"
          cat wrangler.toml
          echo ""
          
          echo "üìã Checking TypeScript configuration..."
          if [ ! -f "tsconfig.json" ]; then
            echo "‚ùå Error: tsconfig.json not found"
            exit 1
          fi
          echo "‚úÖ tsconfig.json found"
          
          echo "üìã Checking TypeScript source..."
          if [ ! -f "src/index.ts" ]; then
            echo "‚ùå Error: src/index.ts not found"
            exit 1
          fi
          echo "‚úÖ src/index.ts exists"

      - name: Validate with dry-run
        run: |
          echo "üîç Validating Workers configuration (dry-run)..."
          npx wrangler deploy --dry-run --outdir=dist
          echo "‚úÖ Configuration validation passed"

      - name: Deploy to Cloudflare Workers
        if: github.event_name != 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: workers/api
