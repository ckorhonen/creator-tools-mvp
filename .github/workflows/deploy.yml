name: Deploy to Cloudflare

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:  # Allow manual triggers

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    name: Deploy Frontend to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Validate package files
        run: |
          echo "✓ Checking package.json..."
          if [ ! -f package.json ]; then
            echo "❌ package.json not found!"
            exit 1
          fi
          echo "✓ Checking package-lock.json..."
          if [ ! -f package-lock.json ]; then
            echo "❌ package-lock.json not found!"
            exit 1
          fi
          echo "✓ All package files present"
          
      - name: Install dependencies
        run: |
          echo "Installing dependencies with npm ci..."
          npm ci --prefer-offline --no-audit
        env:
          NODE_ENV: production
        
      - name: Verify dependencies
        run: |
          echo "Verifying critical dependencies..."
          npm list react react-dom vite || echo "Warning: Some dependencies missing"
          
      - name: Type check
        run: |
          echo "Running TypeScript type check..."
          npm run type-check || true
          
      - name: Build
        run: |
          echo "Building application..."
          npm run build
        env:
          # Use secrets with fallback to default values for initial deployment
          VITE_API_URL: ${{ secrets.VITE_API_URL || 'https://creator-tools-api.ckorhonen.workers.dev' }}
          VITE_TWITTER_CLIENT_ID: ${{ secrets.VITE_TWITTER_CLIENT_ID || '' }}
          VITE_LINKEDIN_CLIENT_ID: ${{ secrets.VITE_LINKEDIN_CLIENT_ID || '' }}
          VITE_INSTAGRAM_APP_ID: ${{ secrets.VITE_INSTAGRAM_APP_ID || '' }}
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "✓ Checking dist directory..."
          if [ ! -d dist ]; then
            echo "❌ dist directory not found after build!"
            exit 1
          fi
          echo "✓ Listing dist contents:"
          ls -lah dist/
          if [ ! -f dist/index.html ]; then
            echo "❌ index.html not found in dist!"
            exit 1
          fi
          echo "✓ Build output verified successfully"
          
      - name: Deploy to Cloudflare Pages
        if: github.event_name != 'pull_request'
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: creator-tools-mvp
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: false

  deploy-workers:
    runs-on: ubuntu-latest
    name: Deploy Workers API
    defaults:
      run:
        working-directory: workers/api
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'workers/api/package-lock.json'

      - name: Validate Workers package files
        run: |
          echo "✓ Checking package.json..."
          if [ ! -f package.json ]; then
            echo "❌ package.json not found!"
            exit 1
          fi
          echo "✓ Checking package-lock.json..."
          if [ ! -f package-lock.json ]; then
            echo "❌ package-lock.json not found!"
            exit 1
          fi
          echo "✓ Checking wrangler.toml..."
          if [ ! -f wrangler.toml ]; then
            echo "❌ wrangler.toml not found!"
            exit 1
          fi
          echo "✓ All required files present"

      - name: Install dependencies
        run: |
          echo "Installing Workers dependencies..."
          npm ci --prefer-offline --no-audit

      - name: Verify wrangler installation
        run: |
          echo "Checking wrangler installation..."
          npx wrangler --version || {
            echo "❌ Wrangler not installed properly!"
            exit 1
          }
          echo "✓ Wrangler installed successfully"

      - name: Verify wrangler.toml configuration
        run: |
          echo "✓ Checking wrangler.toml configuration:"
          cat wrangler.toml
          echo ""
          echo "✓ Configuration file is valid"

      - name: Check source files
        run: |
          echo "✓ Checking source files..."
          if [ ! -f src/index.ts ]; then
            echo "❌ src/index.ts not found!"
            exit 1
          fi
          echo "✓ Source files present"

      - name: Deploy to Cloudflare Workers
        if: github.event_name != 'pull_request'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: workers/api
        continue-on-error: false
